name: CI/CD Pipeline

on:
    push:
        branches:
            - main
    workflow_dispatch:
        inputs:
            environment:
                description: 'Deployment Environment'
                required: true
                default: 'production'

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2.5.0

            - name: Setup Node.js
              uses: actions/setup-node@v2.5.0
              with:
                  node-version: 20.x
                  cache: "npm"

            - name: Install dependencies and build
              run: |
                  npm install --legacy-peer-deps
                  npm run build --env=prod

            - name: List source directory contents
              run: ls -la dist

            - name: Create deployment artefact
              run: tar -czf ${{ github.sha }}.tar.gz -C dist .

            - name: Store artefact for distribution
              uses: actions/upload-artifact@v2
              with:
                  name: app-build
                  path: ${{ github.sha }}.tar.gz

    # unit-test:
    #     runs-on: ubuntu-latest
    #     timeout-minutes: 10
    #     needs: build

    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v4

    #         - name: Set up Node.js
    #           uses: actions/setup-node@v4
    #           with:
    #               node-version: 18.16.1
    #               cache: "npm"

    #         - name: Install dependencies and run tests
    #           run: |
    #               npm install
    #               npm test --watch=false --exclude=**/*.exclude.spec.ts --browsers=ChromeHeadlessNoSandbox

    #         - name: End test
    #           run: |
    #               echo "Successfully tested"

    prepare-release-on-servers:
        runs-on: ubuntu-latest
        needs: build

        steps:
            # - name: List contents before extraction
            #   run: ls -la dist/fuse

            - name: Download artefact for distribution
              uses: actions/download-artifact@v2
              with:
                  name: app-build
                  path: dist

            - name: Extract files
              run: tar -xzf dist/${{ github.sha }}.tar.gz -C .

            - name: Drop zip and tar files
              run: rm -r dist

            - name: Copy file via username and password
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.DEPLOY_HOST }}
                  username: ${{ secrets.DEPLOY_USER }}
                  password: ${{ secrets.DEPLOY_PASSWORD }}
                  port: ${{ secrets.DEPLOY_PORT }}
                  source: .
                  target: ${{ secrets.DEPLOY_PATH }}
                  overwrite: true
                  debug: true
